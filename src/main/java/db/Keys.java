/*
 * This file is generated by jOOQ.
 */
package db;


import db.tables.FlywaySchemaHistory;
import db.tables.Nomenclature;
import db.tables.Organizations;
import db.tables.Positions;
import db.tables.Waybills;
import db.tables.records.FlywaySchemaHistoryRecord;
import db.tables.records.NomenclatureRecord;
import db.tables.records.OrganizationsRecord;
import db.tables.records.PositionsRecord;
import db.tables.records.WaybillsRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<NomenclatureRecord> NOMENCLATURE_PK = UniqueKeys0.NOMENCLATURE_PK;
    public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_PK = UniqueKeys0.ORGANIZATIONS_PK;
    public static final UniqueKey<PositionsRecord> POSITIONS_PK = UniqueKeys0.POSITIONS_PK;
    public static final UniqueKey<WaybillsRecord> WAYBILLS_PK = UniqueKeys0.WAYBILLS_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PositionsRecord, NomenclatureRecord> POSITIONS__POSITIONS_FK0 = ForeignKeys0.POSITIONS__POSITIONS_FK0;
    public static final ForeignKey<PositionsRecord, WaybillsRecord> POSITIONS__POSITIONS_FK1 = ForeignKeys0.POSITIONS__POSITIONS_FK1;
    public static final ForeignKey<WaybillsRecord, OrganizationsRecord> WAYBILLS__WAYBILLS_FK0 = ForeignKeys0.WAYBILLS__WAYBILLS_FK0;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<NomenclatureRecord> NOMENCLATURE_PK = Internal.createUniqueKey(Nomenclature.NOMENCLATURE, "nomenclature_pk", Nomenclature.NOMENCLATURE.ID);
        public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_PK = Internal.createUniqueKey(Organizations.ORGANIZATIONS, "organizations_pk", Organizations.ORGANIZATIONS.ID);
        public static final UniqueKey<PositionsRecord> POSITIONS_PK = Internal.createUniqueKey(Positions.POSITIONS, "positions_pk", Positions.POSITIONS.NOMENCLATURE_ID);
        public static final UniqueKey<WaybillsRecord> WAYBILLS_PK = Internal.createUniqueKey(Waybills.WAYBILLS, "waybills_pk", Waybills.WAYBILLS.ORG_SEND_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PositionsRecord, NomenclatureRecord> POSITIONS__POSITIONS_FK0 = Internal.createForeignKey(db.Keys.NOMENCLATURE_PK, Positions.POSITIONS, "positions__positions_fk0", Positions.POSITIONS.NOMENCLATURE_ID);
        public static final ForeignKey<PositionsRecord, WaybillsRecord> POSITIONS__POSITIONS_FK1 = Internal.createForeignKey(db.Keys.WAYBILLS_PK, Positions.POSITIONS, "positions__positions_fk1", Positions.POSITIONS.WAYBILL_ID);
        public static final ForeignKey<WaybillsRecord, OrganizationsRecord> WAYBILLS__WAYBILLS_FK0 = Internal.createForeignKey(db.Keys.ORGANIZATIONS_PK, Waybills.WAYBILLS, "waybills__waybills_fk0", Waybills.WAYBILLS.ORG_SEND_ID);
    }
}
